if (window.innerWidth > 768) {
    adicionarSeloInFirstCardDesktop()
    adicionarCopy()
    adicionarVerDetalhesDesktop()
}


function adicionarSeloInFirstCardDesktop() {
    let encontrouSelos = false;

    const seloSearch = setInterval(() => {
        if (!encontrouSelos) {
            const totalValue = document.querySelectorAll(".sticky_price .total_value")[0]


            if (totalValue) {

                if (!document.querySelector(".seloContainer")) {
                    totalValue.insertAdjacentHTML("beforeend", `<p class="seloContainer">
                                                                    <svg width="116" height="26" viewBox="0 0 116 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                        <circle cx="13" cy="13" r="12.5" stroke="#FCDD59"/>
                                                                        <path d="M17.3428 16.0186C17.3428 16.8682 17.0322 17.5684 16.4111 18.1191C15.79 18.6699 14.8936 19.0098 13.7217 19.1387V21.0459H12.5527V19.1914C11.0996 19.168 9.90723 18.9453 8.97559 18.5234V16.6689C9.47949 16.915 10.0684 17.123 10.7422 17.293C11.416 17.457 12.0195 17.542 12.5527 17.5479V14.2607L11.8145 13.9883C10.8535 13.6191 10.1504 13.1797 9.70508 12.6699C9.26562 12.1543 9.0459 11.5186 9.0459 10.7627C9.0459 9.9541 9.35938 9.28906 9.98633 8.76758C10.6191 8.24609 11.4746 7.92969 12.5527 7.81836V6.3418H13.7217V7.79199C14.9111 7.83301 16.0391 8.07324 17.1055 8.5127L16.4639 10.1211C15.5439 9.75781 14.6299 9.54102 13.7217 9.4707V12.6699L14.3896 12.9248C15.5029 13.3525 16.2734 13.8037 16.7012 14.2783C17.1289 14.7529 17.3428 15.333 17.3428 16.0186ZM15.2686 16.1504C15.2686 15.8105 15.1484 15.5322 14.9082 15.3154C14.6738 15.0928 14.2783 14.8789 13.7217 14.6738V17.4775C14.7529 17.3193 15.2686 16.877 15.2686 16.1504ZM11.1113 10.7451C11.1113 11.0791 11.2139 11.3574 11.4189 11.5801C11.6299 11.8027 12.0078 12.0225 12.5527 12.2393V9.50586C12.084 9.57617 11.7266 9.71973 11.4805 9.93652C11.2344 10.1533 11.1113 10.4229 11.1113 10.7451Z" fill="#FCDD59"/>
                                                                        <rect x="20.5" y="2.5" width="95" height="21" stroke="#FCDD59"/>
                                                                        <rect x="19" y="3" width="10" height="20" fill="#186AAF"/>
                                                                        <path d="M29.7969 18L26.4062 9.14062H26.3516C26.4154 9.84245 26.4473 10.6764 26.4473 11.6426V18H25.374V8.00586H27.124L30.2891 16.25H30.3438L33.5361 8.00586H35.2725V18H34.1104V11.5605C34.1104 10.8223 34.1423 10.0202 34.2061 9.1543H34.1514L30.7334 18H29.7969ZM41.0146 18.1367C39.9072 18.1367 39.0322 17.7995 38.3896 17.125C37.7516 16.4505 37.4326 15.514 37.4326 14.3154C37.4326 13.1077 37.7288 12.1484 38.3213 11.4375C38.9183 10.7266 39.7181 10.3711 40.7207 10.3711C41.6595 10.3711 42.4023 10.681 42.9492 11.3008C43.4961 11.916 43.7695 12.7295 43.7695 13.7412V14.459H38.6084C38.6312 15.3385 38.8522 16.0062 39.2715 16.4619C39.6953 16.9176 40.29 17.1455 41.0557 17.1455C41.8623 17.1455 42.6598 16.9769 43.4482 16.6396V17.6514C43.0472 17.8245 42.6667 17.9476 42.3066 18.0205C41.9512 18.098 41.5205 18.1367 41.0146 18.1367ZM40.707 11.3213C40.1055 11.3213 39.6247 11.5173 39.2646 11.9092C38.9092 12.3011 38.6995 12.8434 38.6357 13.5361H42.5527C42.5527 12.8206 42.3932 12.2738 42.0742 11.8955C41.7552 11.5127 41.2995 11.3213 40.707 11.3213ZM46.8457 18H45.7109V7.36328H46.8457V18ZM54.3789 18V13.1533C54.3789 12.5426 54.2399 12.0869 53.9619 11.7861C53.6839 11.4854 53.2487 11.335 52.6562 11.335C51.8678 11.335 51.2913 11.5492 50.9268 11.9775C50.5667 12.4059 50.3867 13.1077 50.3867 14.083V18H49.252V7.36328H50.3867V10.583C50.3867 10.9704 50.3685 11.2917 50.332 11.5469H50.4004C50.6237 11.1868 50.9404 10.9043 51.3506 10.6992C51.7653 10.4896 52.237 10.3848 52.7656 10.3848C53.6816 10.3848 54.3675 10.6035 54.8232 11.041C55.2835 11.474 55.5137 12.1644 55.5137 13.1123V18H54.3789ZM64.3184 14.2471C64.3184 15.4684 64.0107 16.4232 63.3955 17.1113C62.7803 17.7949 61.9303 18.1367 60.8457 18.1367C60.1758 18.1367 59.5811 17.9795 59.0615 17.665C58.542 17.3506 58.141 16.8994 57.8584 16.3115C57.5758 15.7236 57.4346 15.0355 57.4346 14.2471C57.4346 13.0257 57.7399 12.0755 58.3506 11.3965C58.9613 10.7129 59.8089 10.3711 60.8936 10.3711C61.9417 10.3711 62.7734 10.7197 63.3887 11.417C64.0085 12.1143 64.3184 13.0576 64.3184 14.2471ZM58.6104 14.2471C58.6104 15.2041 58.8018 15.9333 59.1846 16.4346C59.5674 16.9359 60.1302 17.1865 60.873 17.1865C61.6159 17.1865 62.1787 16.9382 62.5615 16.4414C62.9489 15.9401 63.1426 15.2087 63.1426 14.2471C63.1426 13.2946 62.9489 12.5723 62.5615 12.0801C62.1787 11.5833 61.6113 11.335 60.8594 11.335C60.1165 11.335 59.556 11.5788 59.1777 12.0664C58.7995 12.554 58.6104 13.2809 58.6104 14.2471ZM69.7324 10.3711C70.0651 10.3711 70.3636 10.3984 70.6279 10.4531L70.4707 11.5059C70.1608 11.4375 69.8874 11.4033 69.6504 11.4033C69.0443 11.4033 68.5247 11.6494 68.0918 12.1416C67.6634 12.6338 67.4492 13.2467 67.4492 13.9805V18H66.3145V10.5078H67.251L67.3809 11.8955H67.4355C67.7135 11.4079 68.0485 11.0319 68.4404 10.7676C68.8324 10.5033 69.263 10.3711 69.7324 10.3711ZM79.1523 18.1367C78.6647 18.1367 78.2181 18.0479 77.8125 17.8701C77.4115 17.6878 77.0742 17.4098 76.8008 17.0361H76.7188C76.7734 17.4736 76.8008 17.8883 76.8008 18.2803V21.3633H75.666V10.5078H76.5889L76.7461 11.5332H76.8008C77.0924 11.123 77.432 10.8268 77.8193 10.6445C78.2067 10.4622 78.651 10.3711 79.1523 10.3711C80.1458 10.3711 80.9115 10.7106 81.4492 11.3896C81.9915 12.0687 82.2627 13.0212 82.2627 14.2471C82.2627 15.4775 81.987 16.4346 81.4355 17.1182C80.8887 17.7972 80.1276 18.1367 79.1523 18.1367ZM78.9883 11.335C78.2227 11.335 77.6689 11.5469 77.3271 11.9707C76.9854 12.3945 76.8099 13.069 76.8008 13.9941V14.2471C76.8008 15.2998 76.9762 16.054 77.3271 16.5098C77.6781 16.9609 78.2409 17.1865 79.0156 17.1865C79.6628 17.1865 80.1686 16.9245 80.5332 16.4004C80.9023 15.8763 81.0869 15.154 81.0869 14.2334C81.0869 13.2992 80.9023 12.5837 80.5332 12.0869C80.1686 11.5856 79.6536 11.335 78.9883 11.335ZM87.6699 10.3711C88.0026 10.3711 88.3011 10.3984 88.5654 10.4531L88.4082 11.5059C88.0983 11.4375 87.8249 11.4033 87.5879 11.4033C86.9818 11.4033 86.4622 11.6494 86.0293 12.1416C85.6009 12.6338 85.3867 13.2467 85.3867 13.9805V18H84.252V10.5078H85.1885L85.3184 11.8955H85.373C85.651 11.4079 85.986 11.0319 86.3779 10.7676C86.7699 10.5033 87.2005 10.3711 87.6699 10.3711ZM93.1318 18.1367C92.0244 18.1367 91.1494 17.7995 90.5068 17.125C89.8688 16.4505 89.5498 15.514 89.5498 14.3154C89.5498 13.1077 89.846 12.1484 90.4385 11.4375C91.0355 10.7266 91.8353 10.3711 92.8379 10.3711C93.7767 10.3711 94.5195 10.681 95.0664 11.3008C95.6133 11.916 95.8867 12.7295 95.8867 13.7412V14.459H90.7256C90.7484 15.3385 90.9694 16.0062 91.3887 16.4619C91.8125 16.9176 92.4072 17.1455 93.1729 17.1455C93.9795 17.1455 94.777 16.9769 95.5654 16.6396V17.6514C95.1644 17.8245 94.7839 17.9476 94.4238 18.0205C94.0684 18.098 93.6377 18.1367 93.1318 18.1367ZM92.8242 11.3213C92.2227 11.3213 91.7419 11.5173 91.3818 11.9092C91.0264 12.3011 90.8167 12.8434 90.7529 13.5361H94.6699C94.6699 12.8206 94.5104 12.2738 94.1914 11.8955C93.8724 11.5127 93.4167 11.3213 92.8242 11.3213ZM100.822 18.1367C99.7376 18.1367 98.8968 17.804 98.2998 17.1387C97.7074 16.4688 97.4111 15.5231 97.4111 14.3018C97.4111 13.0485 97.7119 12.0801 98.3135 11.3965C98.9196 10.7129 99.7809 10.3711 100.897 10.3711C101.257 10.3711 101.618 10.4098 101.978 10.4873C102.338 10.5648 102.62 10.6559 102.825 10.7607L102.477 11.7246C102.226 11.6243 101.952 11.5423 101.656 11.4785C101.36 11.4102 101.098 11.376 100.87 11.376C99.348 11.376 98.5869 12.3467 98.5869 14.2881C98.5869 15.2087 98.7715 15.915 99.1406 16.4072C99.5143 16.8994 100.066 17.1455 100.795 17.1455C101.419 17.1455 102.06 17.0111 102.716 16.7422V17.7471C102.215 18.0068 101.583 18.1367 100.822 18.1367ZM101.834 19.9756C101.834 20.4176 101.659 20.7594 101.308 21.001C100.961 21.2425 100.446 21.3633 99.7627 21.3633C99.5303 21.3633 99.3115 21.3428 99.1064 21.3018V20.5771C99.3115 20.6136 99.5485 20.6318 99.8174 20.6318C100.177 20.6318 100.449 20.5863 100.631 20.4951C100.818 20.404 100.911 20.2354 100.911 19.9893C100.911 19.7933 100.82 19.6338 100.638 19.5107C100.46 19.3923 100.123 19.2943 99.626 19.2168L100.228 18H100.979L100.604 18.7861C101.424 18.9639 101.834 19.3604 101.834 19.9756ZM110.967 14.2471C110.967 15.4684 110.659 16.4232 110.044 17.1113C109.429 17.7949 108.579 18.1367 107.494 18.1367C106.824 18.1367 106.229 17.9795 105.71 17.665C105.19 17.3506 104.789 16.8994 104.507 16.3115C104.224 15.7236 104.083 15.0355 104.083 14.2471C104.083 13.0257 104.388 12.0755 104.999 11.3965C105.61 10.7129 106.457 10.3711 107.542 10.3711C108.59 10.3711 109.422 10.7197 110.037 11.417C110.657 12.1143 110.967 13.0576 110.967 14.2471ZM105.259 14.2471C105.259 15.2041 105.45 15.9333 105.833 16.4346C106.216 16.9359 106.779 17.1865 107.521 17.1865C108.264 17.1865 108.827 16.9382 109.21 16.4414C109.597 15.9401 109.791 15.2087 109.791 14.2471C109.791 13.2946 109.597 12.5723 109.21 12.0801C108.827 11.5833 108.26 11.335 107.508 11.335C106.765 11.335 106.204 11.5788 105.826 12.0664C105.448 12.554 105.259 13.2809 105.259 14.2471Z" fill="#FCDD59"/>
                                                                    </svg>

                                                                <p>`)

                }

                document.querySelectorAll(".sticky_price")[0].querySelectorAll("button").forEach((el) => {
                    if (!(el.style.marginTop == "20px")) {
                        el.style.marginTop = "20px"
                    }
                })
                setTimeout(() => {
                    encontrouSelos = true;
                    clearInterval(seloSearch);
                }, 6000)
            }
        }
    }, 300);
}


function adicionarCopy() {

    const myHTML = `        <div class="copy-ss">
                                <p>
                                    <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path
                                            d="M7.5 13.125C10.6066 13.125 13.125 10.6066 13.125 7.5C13.125 4.3934 10.6066 1.875 7.5 1.875C4.3934 1.875 1.875 4.3934 1.875 7.5C1.875 10.6066 4.3934 13.125 7.5 13.125Z"
                                            stroke="#FF0000" stroke-linecap="round" stroke-linejoin="round" />
                                        <path d="M7.5 4.21875V7.5H10.7812" stroke="#FF0000" stroke-linecap="round" stroke-linejoin="round" />
                                    </svg>


                                    Aproveite o melhor preço antes que ele se altere.
                                </p>
                            </div>`




    let encontrouCard = false;

    const encontrouFirstCard = setInterval(() => {
        if (!encontrouCard) {
            const firstCard = document.querySelector(".flightcardlist")

            if (firstCard) {
                if (!document.querySelector(".copy-ss")) {
                    firstCard.insertAdjacentHTML("afterend", myHTML)
                }


                // if (Array(document.querySelector(".flightcardlist").querySelectorAll(".flightcarditem"))[0].length >= 3){
                //     document.querySelector(".copy-ss").style.position = "relative"
                // }
                setTimeout(() => {
                    encontrouCard = true;
                    clearInterval(encontrouFirstCard);
                }, 6000)
            }
        }
    }, 300);

}

function adicionarVerDetalhesDesktop() {
    const myHTML = `
        <div>
        <p>Ver detalhes</p>
        <svg width="15" height="9" viewBox="0 0 15 9" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M13.4375 1.125L7.5 7.0625L1.5625 1.125" stroke="black" stroke-width="2" stroke-linecap="round"
                stroke-linejoin="round" />
        </svg>
    </div>
    `
    let encontrouButton2 = false;

    const encontrouFirstCard = setInterval(() => {
        if (!encontrouButton2) {
            const buttons = document.querySelectorAll(".flightcarditem .arrow_details span")

            if (buttons) {
                
                buttons.forEach((button) =>{ 
                    if(!button.querySelector("div")){
                        button.insertAdjacentHTML("afterbegin", myHTML)
                    }
                })
                setTimeout(() => {
                    encontrouButton2 = true;
                    clearInterval(encontrouFirstCard);
                }, 10000)
            }
        }
    }, 300);
}

